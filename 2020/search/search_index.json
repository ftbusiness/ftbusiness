{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Overview Fiori Tracker Business is a set of paid add-ons to free Fiori Tracker Suite . List of all available add-ons: Catalog Import - Lets you import your catalogs from your system into the FT catalogs list","title":"Overview"},{"location":"#overview","text":"Fiori Tracker Business is a set of paid add-ons to free Fiori Tracker Suite .","title":"Overview"},{"location":"#list-of-all-available-add-ons","text":"Catalog Import - Lets you import your catalogs from your system into the FT catalogs list","title":"List of all available add-ons:"},{"location":"fa/","text":"Fiori Apps' Usage Report This products enables monitoring of SAP Fiori application usage in your SAP landscape. See details at: http://fioriappsusage.org","title":"Fiori Apps' Usage Report"},{"location":"fa/#fiori-apps-usage-report","text":"This products enables monitoring of SAP Fiori application usage in your SAP landscape. See details at: http://fioriappsusage.org","title":"Fiori Apps' Usage Report"},{"location":"faq/","text":"Fiori Tracker Business- Frequently Asked Questions","title":"Fiori Tracker Business- Frequently Asked Questions"},{"location":"faq/#fiori-tracker-business-frequently-asked-questions","text":"","title":"Fiori Tracker Business- Frequently Asked Questions"},{"location":"info/","text":"Macros Plugin Environment General List All available variables and filters within the macros plugin: Variable Type Content extra dict prod [ dict ] config Config config_file_path = 'C:\\\\vs\\\\help-src\\\\ftbus\\\\mkdocs.yml', site_name = 'Fiori Tracker Business', nav = [{'Catalog Import': 'ci/SPS02/main.md'}, {\"Fiori Apps' Usage Report\": 'fa.md'}, {'Installation': 'inst.md'}], pages [ NoneType ], site_url = '', site_description [ NoneType ], site_author [ NoneType ], theme [ Theme ], docs_dir = 'C:\\\\vs\\\\help-src\\\\ftbus\\\\docs', site_dir = 'C:\\\\vs\\\\help-src\\\\ftbus\\\\site', copyright [ NoneType ], google_analytics [ NoneType ], dev_addr [ Address ], use_directory_urls = True, repo_url = '', repo_name = '', edit_uri = '', extra_css = ['stylesheets/extra.css'], extra_javascript = [], extra_templates = [], markdown_extensions = ['toc', 'tables', 'fenced_code', 'admonition'], mdx_configs [ dict ], strict = False, remote_branch = 'gh-pages', remote_name = 'origin', extra [ SubConfig ], plugins [ PluginCollection ] environment dict system = 'Windows', system_version = '10', python_version = '3.9.1', mkdocs_version = '1.1.2', macros_plugin_version = '0.5.0', jinja2_version = '2.11.2' plugin Config module_name = 'main', modules = [], include_dir = '', include_yaml = [], j2_block_start_string = '', j2_block_end_string = '', j2_variable_start_string = '', j2_variable_end_string = '', verbose = False git dict status = True, date [ datetime ], short_commit = 'd7336bf', commit = 'd7336bfeb622045aa78569d556e9c20cd8036999', author = 'gmalew', tag = '', date_ISO = '2021-03-15 12:27:15 +0100', message = 'upd', raw = 'commit d7336bfeb622045aa78569d556e9c20cd8036999\\nAuthor: gmalew \\nDate: Mon Mar 15 12:27:15 2021 +0100\\n\\n upd', root_dir = 'C:/vs/help-src/ftbus' context function ( obj, e ) Default mkdocs_macro List the defined variables macros_info function ( ) Test/debug function: list useful documentation on the mkdocs_macro environment. now function ( ) Get the current time (returns a datetime object). Used alone, it provides a timestamp. To get the year use now().year , for the month number now().month , etc. fix_url function ( url, r ) If url is relative, fix it so that it points to the docs diretory. This is necessary because relative links in markdown must be adapted in html ('img/foo.png' => '../img/img.png'). prod dict ci [ dict ] filters dict pretty [ function ] filters_builtin dict abs [ builtin_function_or_method ], attr [ function ], batch [ function ], capitalize [ function ], center [ function ], count [ builtin_function_or_method ], d [ function ], default [ function ], dictsort [ function ], e [ function ], escape [ function ], filesizeformat [ function ], first [ function ], float [ function ], forceescape [ function ], format [ function ], groupby [ function ], indent [ function ], int [ function ], join [ function ], last [ function ], length [ builtin_function_or_method ], list [ function ], lower [ function ], map [ function ], min [ function ], max [ function ], pprint [ function ], random [ function ], reject [ function ], rejectattr [ function ], replace [ function ], reverse [ function ], round [ function ], safe [ function ], select [ function ], selectattr [ function ], slice [ function ], sort [ function ], string [ function ], striptags [ function ], sum [ function ], title [ function ], trim [ function ], truncate [ function ], unique [ function ], upper [ function ], urlencode [ function ], urlize [ function ], wordcount [ function ], wordwrap [ function ], xmlattr [ function ], tojson [ function ] navigation Navigation Page(title='Catalog Import', url='ci/SPS02/main/') Page(title='Fiori Apps' Usage Report', url='fa/') Page(title='Installation', url='inst/') page Page Page(title='Info', url='info/') Config Information Standard MkDocs configuration information. Do not try to modify. e.g. {{ config.docs_dir }} See also the MkDocs documentation on the config object . Variable Type Content config_file_path str 'C:\\\\vs\\\\help-src\\\\ftbus\\\\mkdocs.yml' site_name str 'Fiori Tracker Business' nav list [{'Catalog Import': 'ci/SPS02/main.md'}, {\"Fiori Apps' Usage Report\": 'fa.md'}, {'Installation': 'inst.md'}] pages NoneType None site_url str '' site_description NoneType None site_author NoneType None theme Theme Theme(name='material', dirs=['c:\\\\users\\\\gm\\\\appdata\\\\local\\\\programs\\\\python\\\\python39\\\\lib\\\\site-packages\\\\material', 'c:\\\\users\\\\gm\\\\appdata\\\\local\\\\programs\\\\python\\\\python39\\\\lib\\\\site-packages\\\\mkdocs\\\\templates'], static_templates=['404.html', 'sitemap.xml'], language='en', direction=None, features=[], palette={'primary': None, 'accent': None}, font={'text': 'Roboto', 'code': 'Roboto Mono'}, icon=None, favicon='assets/images/favicon.ico', include_search_page=False, search_index_only=True, logo='assets/images/logo.png') docs_dir str 'C:\\\\vs\\\\help-src\\\\ftbus\\\\docs' site_dir str 'C:\\\\vs\\\\help-src\\\\ftbus\\\\site' copyright NoneType None google_analytics NoneType None dev_addr Address Address(host='127.0.0.1', port=8000) use_directory_urls bool True repo_url str '' repo_name str '' edit_uri str '' extra_css list ['stylesheets/extra.css'] extra_javascript list [] extra_templates list [] markdown_extensions list ['toc', 'tables', 'fenced_code', 'admonition'] mdx_configs dict strict bool False remote_branch str 'gh-pages' remote_name str 'origin' extra SubConfig {'prod': {'ci': {'R2020FPS01': {'rel': 'FPS01', 'compatibleCoreLink': 'https://help.fioritracker.org/V2020/core/SPS02/main/', 'compatibleAsisMainLink': 'https://help.fioritracker.org/V2020/asis/FPS01/main/', 'compatibleAsisCenRel': 'FPS01', 'compatibleAsisCenLink': 'https://help.fioritracker.org/V2020/asis/FPS01/inst-cen/', 'compatibleAsisManRel': 'FPS01', 'compatibleAsisManLink': 'https://help.fioritracker.org/V2020/asis/FPS01/inst-man/'}, 'R2020SPS02': {'rel': 'SPS02', 'compatibleCoreLink': 'https://help.fioritracker.org/V2020/core/SPS03/main/', 'compatibleAsisMainLink': 'https://help.fioritracker.org/V2020/asis/SPS02/main/', 'compatibleAsisCenRel': 'SPS02', 'compatibleAsisCenLink': 'https://help.fioritracker.org/V2020/asis/SPS02/inst-cen/', 'compatibleAsisManRel': 'SPS02', 'compatibleAsisManLink': 'https://help.fioritracker.org/V2020/asis/SPS02/inst-man/'}}}} plugins PluginCollection macros [ MacrosPlugin ], search [ SearchPlugin ] Git Information Information available on the last commit and the git repository containing the documentation project: e.g. {{ git.message }} Variable Type Content status bool True date datetime datetime.datetime(2021, 3, 15, 12, 27, 15, tzinfo=tzoffset(None, 3600)) short_commit str 'd7336bf' commit str 'd7336bfeb622045aa78569d556e9c20cd8036999' author str 'gmalew' tag str '' date_ISO str '2021-03-15 12:27:15 +0100' message str 'upd' raw str 'commit d7336bfeb622045aa78569d556e9c20cd8036999\\nAuthor: gmalew \\nDate: Mon Mar 15 12:27:15 2021 +0100\\n\\n upd' root_dir str 'C:/vs/help-src/ftbus' Page Attributes Provided by MkDocs. These attributes change for every page (the attributes shown are for this page). e.g. {{ page.title }} See also the MkDocs documentation on the page object . Variable Type Content file File page [ Page ], src_path = 'info.md', abs_src_path = 'C:\\\\vs\\\\help-src\\\\ftbus\\\\docs\\\\info.md', name = 'info', dest_path = 'info\\\\index.html', abs_dest_path = 'C:\\\\vs\\\\help-src\\\\ftbus\\\\site\\\\info\\\\index.html', url = 'info/' title str 'Info' parent NoneType None children NoneType None previous_page NoneType None next_page NoneType None _Page__active bool False is_section bool False is_page bool True is_link bool False update_date str '2021-03-15' canonical_url NoneType None abs_url NoneType None edit_url NoneType None markdown str '{{ macros_info() }}\\n' content NoneType None toc list [] meta dict To have all titles of all pages, use: {% for page in navigation.pages %} - {{ page.title }} {% endfor% } Plugin Filters These filters are provided as a standard by the macros plugin. Variable Type Content pretty function ( var_list, rows, header, e ) Default mkdocs_macro Prettify a dictionary or object (used for environment documentation, or debugging). Builtin Jinja2 Filters These filters are provided by Jinja2 as a standard. See also the Jinja2 documentation on builtin filters ). Variable Type Content abs builtin_function_or_method Return the absolute value of the argument. attr function ( environment, obj, name, value ) Get an attribute of an object. foo|attr(\"bar\") works like foo.bar just that always an attribute is returned and items are not looked up. batch function ( value, linecount, fill_with, tmp, item ) A filter that batches items. It works pretty much like slice just the other way round. It returns a list of lists with the given number of items. If you provide a second parameter this is used to fill up missing items. See this example. capitalize function ( s ) Capitalize a value. The first character will be uppercase, all others lowercase. center function ( value, width ) Centers the value in a field of a given width. count builtin_function_or_method Return the number of items in a container. d function ( value, default_value, boolean ) If the value is undefined it will return the passed default value, otherwise the value of the variable. default function ( value, default_value, boolean ) If the value is undefined it will return the passed default value, otherwise the value of the variable. dictsort function ( value, case_sensitive, by, reverse, sort_func ) Sort a dict and yield (key, value) pairs. Because python dicts are unsorted you may want to use this function to order them by either key or value. e function ( s ) Replace the characters & , < , > , ' , and \" in the string with HTML-safe sequences. Use this if you need to display text that might contain such characters in HTML. escape function ( s ) Replace the characters & , < , > , ' , and \" in the string with HTML-safe sequences. Use this if you need to display text that might contain such characters in HTML. filesizeformat function ( value, binary, bytes, base, prefixes, i, prefix, unit ) Format the value like a 'human-readable' file size (i.e. 13 kB, 4.1 MB, 102 Bytes, etc). Per default decimal prefixes are used (Mega, Giga, etc.), if the second parameter is set to True the binary prefixes are used (Mebi, Gibi). first function ( environment, seq ) Return the first item of a sequence. float function ( value, default ) Convert the value into a floating point number. If the conversion doesn't work it will return 0.0 . You can override this default using the first parameter. forceescape function ( value ) Enforce HTML escaping. This will probably double escape variables. format function ( value, args, kwargs ) Apply the given values to a printf-style _ format string, like string % values . groupby function ( environment, value, attribute, expr ) Group a sequence of objects by an attribute using Python's :func: itertools.groupby . The attribute can use dot notation for nested access, like \"address.city\" . Unlike Python's groupby , the values are sorted first so only one group is returned for each unique value. indent function ( s, width, first, blank, indentfirst, newline, rv, lines ) Return a copy of the string with each line indented by 4 spaces. The first line and blank lines are not indented by default. int function ( value, default, base ) Convert the value into an integer. If the conversion doesn't work it will return 0 . You can override this default using the first parameter. You can also override the default base (10) in the second parameter, which handles input with prefixes such as 0b, 0o and 0x for bases 2, 8 and 16 respectively. The base is ignored for decimal numbers and non-string values. join function ( eval_ctx, value, d, attribute, do_escape, idx, item ) Return a string which is the concatenation of the strings in the sequence. The separator between elements is an empty string per default, you can define it with the optional parameter. last function ( environment, seq ) Return the last item of a sequence. length builtin_function_or_method Return the number of items in a container. list function ( value ) Convert the value into a list. If it was a string the returned list will be a list of characters. lower function ( s ) Convert a value to lowercase. map function ( args, kwargs, seq, func, item ) Applies a filter on a sequence of objects or looks up an attribute. This is useful when dealing with lists of objects but you are really only interested in a certain value of it. min function ( environment, value, case_sensitive, attribute ) Return the smallest item from the sequence. max function ( environment, value, case_sensitive, attribute ) Return the largest item from the sequence. pprint function ( value, verbose ) Pretty print a variable. Useful for debugging. random function ( context, seq ) Return a random item from the sequence. reject function ( args, kwargs ) Filters a sequence of objects by applying a test to each object, and rejecting the objects with the test succeeding. rejectattr function ( args, kwargs ) Filters a sequence of objects by applying a test to the specified attribute of each object, and rejecting the objects with the test succeeding. replace function ( eval_ctx, s, old, new, count ) Return a copy of the value with all occurrences of a substring replaced with a new one. The first argument is the substring that should be replaced, the second is the replacement string. If the optional third argument count is given, only the first count occurrences are replaced. reverse function ( value, rv ) Reverse the object or return an iterator that iterates over it the other way round. round function ( value, precision, method, func ) Round the number to a given precision. The first parameter specifies the precision (default is 0 ), the second the rounding method. safe function ( value ) Mark the value as safe which means that in an environment with automatic escaping enabled this variable will not be escaped. select function ( args, kwargs ) Filters a sequence of objects by applying a test to each object, and only selecting the objects with the test succeeding. selectattr function ( args, kwargs ) Filters a sequence of objects by applying a test to the specified attribute of each object, and only selecting the objects with the test succeeding. slice function ( value, slices, fill_with, seq, length, items_per_slice, slices_with_extra, offset, slice_number, start, end, tmp ) Slice an iterator and return a list of lists containing those items. Useful if you want to create a div containing three ul tags that represent columns. sort function ( environment, value, reverse, case_sensitive, attribute, key_func ) Sort an iterable using Python's :func: sorted . string function ( s ) Convert an object to a string if it isn't already. This preserves a :class: Markup string rather than converting it back to a basic string, so it will still be marked as safe and won't be escaped again. striptags function ( value ) Strip SGML/XML tags and replace adjacent whitespace by one space. sum function ( environment, iterable, attribute, start ) Returns the sum of a sequence of numbers plus the value of parameter 'start' (which defaults to 0). When the sequence is empty it returns start. title function ( s ) Return a titlecased version of the value. I.e. words will start with uppercase letters, all remaining characters are lowercase. trim function ( value, chars ) Strip leading and trailing characters, by default whitespace. truncate function ( env, s, length, killwords, end, leeway, result ) Return a truncated copy of the string. The length is specified with the first parameter which defaults to 255 . If the second parameter is true the filter will cut the text at length. Otherwise it will discard the last word. If the text was in fact truncated it will append an ellipsis sign ( \"...\" ). If you want a different ellipsis sign than \"...\" you can specify it using the third parameter. Strings that only exceed the length by the tolerance margin given in the fourth parameter will not be truncated. unique function ( environment, value, case_sensitive, attribute, getter, seen, item, key ) Returns a list of unique items from the given iterable. upper function ( s ) Convert a value to uppercase. urlencode function ( value, items ) Quote data for use in a URL path or query using UTF-8. urlize function ( eval_ctx, value, trim_url_limit, nofollow, target, rel, policies, rv ) Converts URLs in plain text into clickable links. wordcount function ( s ) Count the words in that string. wordwrap function ( environment, s, width, break_long_words, wrapstring, break_on_hyphens ) Wrap a string to the given width. Existing newlines are treated as paragraphs to be wrapped separately. xmlattr function ( _eval_ctx, d, autospace, rv ) Create an SGML/XML attribute string based on the items in a dict. All values that are neither none nor undefined are automatically escaped. tojson function ( eval_ctx, value, indent, policies, dumper, options ) Dumps a structure to JSON so that it's safe to use in <script> tags. It accepts the same arguments and returns a JSON string. Note that this is available in templates through the |tojson filter which will also mark the result as safe. Due to how this function escapes certain characters this is safe even if used outside of <script> tags.","title":"Info"},{"location":"info/#macros-plugin-environment","text":"","title":"Macros Plugin Environment"},{"location":"info/#general-list","text":"All available variables and filters within the macros plugin: Variable Type Content extra dict prod [ dict ] config Config config_file_path = 'C:\\\\vs\\\\help-src\\\\ftbus\\\\mkdocs.yml', site_name = 'Fiori Tracker Business', nav = [{'Catalog Import': 'ci/SPS02/main.md'}, {\"Fiori Apps' Usage Report\": 'fa.md'}, {'Installation': 'inst.md'}], pages [ NoneType ], site_url = '', site_description [ NoneType ], site_author [ NoneType ], theme [ Theme ], docs_dir = 'C:\\\\vs\\\\help-src\\\\ftbus\\\\docs', site_dir = 'C:\\\\vs\\\\help-src\\\\ftbus\\\\site', copyright [ NoneType ], google_analytics [ NoneType ], dev_addr [ Address ], use_directory_urls = True, repo_url = '', repo_name = '', edit_uri = '', extra_css = ['stylesheets/extra.css'], extra_javascript = [], extra_templates = [], markdown_extensions = ['toc', 'tables', 'fenced_code', 'admonition'], mdx_configs [ dict ], strict = False, remote_branch = 'gh-pages', remote_name = 'origin', extra [ SubConfig ], plugins [ PluginCollection ] environment dict system = 'Windows', system_version = '10', python_version = '3.9.1', mkdocs_version = '1.1.2', macros_plugin_version = '0.5.0', jinja2_version = '2.11.2' plugin Config module_name = 'main', modules = [], include_dir = '', include_yaml = [], j2_block_start_string = '', j2_block_end_string = '', j2_variable_start_string = '', j2_variable_end_string = '', verbose = False git dict status = True, date [ datetime ], short_commit = 'd7336bf', commit = 'd7336bfeb622045aa78569d556e9c20cd8036999', author = 'gmalew', tag = '', date_ISO = '2021-03-15 12:27:15 +0100', message = 'upd', raw = 'commit d7336bfeb622045aa78569d556e9c20cd8036999\\nAuthor: gmalew \\nDate: Mon Mar 15 12:27:15 2021 +0100\\n\\n upd', root_dir = 'C:/vs/help-src/ftbus' context function ( obj, e ) Default mkdocs_macro List the defined variables macros_info function ( ) Test/debug function: list useful documentation on the mkdocs_macro environment. now function ( ) Get the current time (returns a datetime object). Used alone, it provides a timestamp. To get the year use now().year , for the month number now().month , etc. fix_url function ( url, r ) If url is relative, fix it so that it points to the docs diretory. This is necessary because relative links in markdown must be adapted in html ('img/foo.png' => '../img/img.png'). prod dict ci [ dict ] filters dict pretty [ function ] filters_builtin dict abs [ builtin_function_or_method ], attr [ function ], batch [ function ], capitalize [ function ], center [ function ], count [ builtin_function_or_method ], d [ function ], default [ function ], dictsort [ function ], e [ function ], escape [ function ], filesizeformat [ function ], first [ function ], float [ function ], forceescape [ function ], format [ function ], groupby [ function ], indent [ function ], int [ function ], join [ function ], last [ function ], length [ builtin_function_or_method ], list [ function ], lower [ function ], map [ function ], min [ function ], max [ function ], pprint [ function ], random [ function ], reject [ function ], rejectattr [ function ], replace [ function ], reverse [ function ], round [ function ], safe [ function ], select [ function ], selectattr [ function ], slice [ function ], sort [ function ], string [ function ], striptags [ function ], sum [ function ], title [ function ], trim [ function ], truncate [ function ], unique [ function ], upper [ function ], urlencode [ function ], urlize [ function ], wordcount [ function ], wordwrap [ function ], xmlattr [ function ], tojson [ function ] navigation Navigation Page(title='Catalog Import', url='ci/SPS02/main/') Page(title='Fiori Apps' Usage Report', url='fa/') Page(title='Installation', url='inst/') page Page Page(title='Info', url='info/')","title":"General List"},{"location":"info/#config-information","text":"Standard MkDocs configuration information. Do not try to modify. e.g. {{ config.docs_dir }} See also the MkDocs documentation on the config object . Variable Type Content config_file_path str 'C:\\\\vs\\\\help-src\\\\ftbus\\\\mkdocs.yml' site_name str 'Fiori Tracker Business' nav list [{'Catalog Import': 'ci/SPS02/main.md'}, {\"Fiori Apps' Usage Report\": 'fa.md'}, {'Installation': 'inst.md'}] pages NoneType None site_url str '' site_description NoneType None site_author NoneType None theme Theme Theme(name='material', dirs=['c:\\\\users\\\\gm\\\\appdata\\\\local\\\\programs\\\\python\\\\python39\\\\lib\\\\site-packages\\\\material', 'c:\\\\users\\\\gm\\\\appdata\\\\local\\\\programs\\\\python\\\\python39\\\\lib\\\\site-packages\\\\mkdocs\\\\templates'], static_templates=['404.html', 'sitemap.xml'], language='en', direction=None, features=[], palette={'primary': None, 'accent': None}, font={'text': 'Roboto', 'code': 'Roboto Mono'}, icon=None, favicon='assets/images/favicon.ico', include_search_page=False, search_index_only=True, logo='assets/images/logo.png') docs_dir str 'C:\\\\vs\\\\help-src\\\\ftbus\\\\docs' site_dir str 'C:\\\\vs\\\\help-src\\\\ftbus\\\\site' copyright NoneType None google_analytics NoneType None dev_addr Address Address(host='127.0.0.1', port=8000) use_directory_urls bool True repo_url str '' repo_name str '' edit_uri str '' extra_css list ['stylesheets/extra.css'] extra_javascript list [] extra_templates list [] markdown_extensions list ['toc', 'tables', 'fenced_code', 'admonition'] mdx_configs dict strict bool False remote_branch str 'gh-pages' remote_name str 'origin' extra SubConfig {'prod': {'ci': {'R2020FPS01': {'rel': 'FPS01', 'compatibleCoreLink': 'https://help.fioritracker.org/V2020/core/SPS02/main/', 'compatibleAsisMainLink': 'https://help.fioritracker.org/V2020/asis/FPS01/main/', 'compatibleAsisCenRel': 'FPS01', 'compatibleAsisCenLink': 'https://help.fioritracker.org/V2020/asis/FPS01/inst-cen/', 'compatibleAsisManRel': 'FPS01', 'compatibleAsisManLink': 'https://help.fioritracker.org/V2020/asis/FPS01/inst-man/'}, 'R2020SPS02': {'rel': 'SPS02', 'compatibleCoreLink': 'https://help.fioritracker.org/V2020/core/SPS03/main/', 'compatibleAsisMainLink': 'https://help.fioritracker.org/V2020/asis/SPS02/main/', 'compatibleAsisCenRel': 'SPS02', 'compatibleAsisCenLink': 'https://help.fioritracker.org/V2020/asis/SPS02/inst-cen/', 'compatibleAsisManRel': 'SPS02', 'compatibleAsisManLink': 'https://help.fioritracker.org/V2020/asis/SPS02/inst-man/'}}}} plugins PluginCollection macros [ MacrosPlugin ], search [ SearchPlugin ]","title":"Config Information"},{"location":"info/#git-information","text":"Information available on the last commit and the git repository containing the documentation project: e.g. {{ git.message }} Variable Type Content status bool True date datetime datetime.datetime(2021, 3, 15, 12, 27, 15, tzinfo=tzoffset(None, 3600)) short_commit str 'd7336bf' commit str 'd7336bfeb622045aa78569d556e9c20cd8036999' author str 'gmalew' tag str '' date_ISO str '2021-03-15 12:27:15 +0100' message str 'upd' raw str 'commit d7336bfeb622045aa78569d556e9c20cd8036999\\nAuthor: gmalew \\nDate: Mon Mar 15 12:27:15 2021 +0100\\n\\n upd' root_dir str 'C:/vs/help-src/ftbus'","title":"Git Information"},{"location":"info/#page-attributes","text":"Provided by MkDocs. These attributes change for every page (the attributes shown are for this page). e.g. {{ page.title }} See also the MkDocs documentation on the page object . Variable Type Content file File page [ Page ], src_path = 'info.md', abs_src_path = 'C:\\\\vs\\\\help-src\\\\ftbus\\\\docs\\\\info.md', name = 'info', dest_path = 'info\\\\index.html', abs_dest_path = 'C:\\\\vs\\\\help-src\\\\ftbus\\\\site\\\\info\\\\index.html', url = 'info/' title str 'Info' parent NoneType None children NoneType None previous_page NoneType None next_page NoneType None _Page__active bool False is_section bool False is_page bool True is_link bool False update_date str '2021-03-15' canonical_url NoneType None abs_url NoneType None edit_url NoneType None markdown str '{{ macros_info() }}\\n' content NoneType None toc list [] meta dict To have all titles of all pages, use: {% for page in navigation.pages %} - {{ page.title }} {% endfor% }","title":"Page Attributes"},{"location":"info/#plugin-filters","text":"These filters are provided as a standard by the macros plugin. Variable Type Content pretty function ( var_list, rows, header, e ) Default mkdocs_macro Prettify a dictionary or object (used for environment documentation, or debugging).","title":"Plugin Filters"},{"location":"info/#builtin-jinja2-filters","text":"These filters are provided by Jinja2 as a standard. See also the Jinja2 documentation on builtin filters ). Variable Type Content abs builtin_function_or_method Return the absolute value of the argument. attr function ( environment, obj, name, value ) Get an attribute of an object. foo|attr(\"bar\") works like foo.bar just that always an attribute is returned and items are not looked up. batch function ( value, linecount, fill_with, tmp, item ) A filter that batches items. It works pretty much like slice just the other way round. It returns a list of lists with the given number of items. If you provide a second parameter this is used to fill up missing items. See this example. capitalize function ( s ) Capitalize a value. The first character will be uppercase, all others lowercase. center function ( value, width ) Centers the value in a field of a given width. count builtin_function_or_method Return the number of items in a container. d function ( value, default_value, boolean ) If the value is undefined it will return the passed default value, otherwise the value of the variable. default function ( value, default_value, boolean ) If the value is undefined it will return the passed default value, otherwise the value of the variable. dictsort function ( value, case_sensitive, by, reverse, sort_func ) Sort a dict and yield (key, value) pairs. Because python dicts are unsorted you may want to use this function to order them by either key or value. e function ( s ) Replace the characters & , < , > , ' , and \" in the string with HTML-safe sequences. Use this if you need to display text that might contain such characters in HTML. escape function ( s ) Replace the characters & , < , > , ' , and \" in the string with HTML-safe sequences. Use this if you need to display text that might contain such characters in HTML. filesizeformat function ( value, binary, bytes, base, prefixes, i, prefix, unit ) Format the value like a 'human-readable' file size (i.e. 13 kB, 4.1 MB, 102 Bytes, etc). Per default decimal prefixes are used (Mega, Giga, etc.), if the second parameter is set to True the binary prefixes are used (Mebi, Gibi). first function ( environment, seq ) Return the first item of a sequence. float function ( value, default ) Convert the value into a floating point number. If the conversion doesn't work it will return 0.0 . You can override this default using the first parameter. forceescape function ( value ) Enforce HTML escaping. This will probably double escape variables. format function ( value, args, kwargs ) Apply the given values to a printf-style _ format string, like string % values . groupby function ( environment, value, attribute, expr ) Group a sequence of objects by an attribute using Python's :func: itertools.groupby . The attribute can use dot notation for nested access, like \"address.city\" . Unlike Python's groupby , the values are sorted first so only one group is returned for each unique value. indent function ( s, width, first, blank, indentfirst, newline, rv, lines ) Return a copy of the string with each line indented by 4 spaces. The first line and blank lines are not indented by default. int function ( value, default, base ) Convert the value into an integer. If the conversion doesn't work it will return 0 . You can override this default using the first parameter. You can also override the default base (10) in the second parameter, which handles input with prefixes such as 0b, 0o and 0x for bases 2, 8 and 16 respectively. The base is ignored for decimal numbers and non-string values. join function ( eval_ctx, value, d, attribute, do_escape, idx, item ) Return a string which is the concatenation of the strings in the sequence. The separator between elements is an empty string per default, you can define it with the optional parameter. last function ( environment, seq ) Return the last item of a sequence. length builtin_function_or_method Return the number of items in a container. list function ( value ) Convert the value into a list. If it was a string the returned list will be a list of characters. lower function ( s ) Convert a value to lowercase. map function ( args, kwargs, seq, func, item ) Applies a filter on a sequence of objects or looks up an attribute. This is useful when dealing with lists of objects but you are really only interested in a certain value of it. min function ( environment, value, case_sensitive, attribute ) Return the smallest item from the sequence. max function ( environment, value, case_sensitive, attribute ) Return the largest item from the sequence. pprint function ( value, verbose ) Pretty print a variable. Useful for debugging. random function ( context, seq ) Return a random item from the sequence. reject function ( args, kwargs ) Filters a sequence of objects by applying a test to each object, and rejecting the objects with the test succeeding. rejectattr function ( args, kwargs ) Filters a sequence of objects by applying a test to the specified attribute of each object, and rejecting the objects with the test succeeding. replace function ( eval_ctx, s, old, new, count ) Return a copy of the value with all occurrences of a substring replaced with a new one. The first argument is the substring that should be replaced, the second is the replacement string. If the optional third argument count is given, only the first count occurrences are replaced. reverse function ( value, rv ) Reverse the object or return an iterator that iterates over it the other way round. round function ( value, precision, method, func ) Round the number to a given precision. The first parameter specifies the precision (default is 0 ), the second the rounding method. safe function ( value ) Mark the value as safe which means that in an environment with automatic escaping enabled this variable will not be escaped. select function ( args, kwargs ) Filters a sequence of objects by applying a test to each object, and only selecting the objects with the test succeeding. selectattr function ( args, kwargs ) Filters a sequence of objects by applying a test to the specified attribute of each object, and only selecting the objects with the test succeeding. slice function ( value, slices, fill_with, seq, length, items_per_slice, slices_with_extra, offset, slice_number, start, end, tmp ) Slice an iterator and return a list of lists containing those items. Useful if you want to create a div containing three ul tags that represent columns. sort function ( environment, value, reverse, case_sensitive, attribute, key_func ) Sort an iterable using Python's :func: sorted . string function ( s ) Convert an object to a string if it isn't already. This preserves a :class: Markup string rather than converting it back to a basic string, so it will still be marked as safe and won't be escaped again. striptags function ( value ) Strip SGML/XML tags and replace adjacent whitespace by one space. sum function ( environment, iterable, attribute, start ) Returns the sum of a sequence of numbers plus the value of parameter 'start' (which defaults to 0). When the sequence is empty it returns start. title function ( s ) Return a titlecased version of the value. I.e. words will start with uppercase letters, all remaining characters are lowercase. trim function ( value, chars ) Strip leading and trailing characters, by default whitespace. truncate function ( env, s, length, killwords, end, leeway, result ) Return a truncated copy of the string. The length is specified with the first parameter which defaults to 255 . If the second parameter is true the filter will cut the text at length. Otherwise it will discard the last word. If the text was in fact truncated it will append an ellipsis sign ( \"...\" ). If you want a different ellipsis sign than \"...\" you can specify it using the third parameter. Strings that only exceed the length by the tolerance margin given in the fourth parameter will not be truncated. unique function ( environment, value, case_sensitive, attribute, getter, seen, item, key ) Returns a list of unique items from the given iterable. upper function ( s ) Convert a value to uppercase. urlencode function ( value, items ) Quote data for use in a URL path or query using UTF-8. urlize function ( eval_ctx, value, trim_url_limit, nofollow, target, rel, policies, rv ) Converts URLs in plain text into clickable links. wordcount function ( s ) Count the words in that string. wordwrap function ( environment, s, width, break_long_words, wrapstring, break_on_hyphens ) Wrap a string to the given width. Existing newlines are treated as paragraphs to be wrapped separately. xmlattr function ( _eval_ctx, d, autospace, rv ) Create an SGML/XML attribute string based on the items in a dict. All values that are neither none nor undefined are automatically escaped. tojson function ( eval_ctx, value, indent, policies, dumper, options ) Dumps a structure to JSON so that it's safe to use in <script> tags. It accepts the same arguments and returns a JSON string. Note that this is available in templates through the |tojson filter which will also mark the result as safe. Due to how this function escapes certain characters this is safe even if used outside of <script> tags.","title":"Builtin Jinja2 Filters"},{"location":"inst/","text":"Installation - general considerations To install Fiori Tracker Business products please follow the installations guides that are in the Installation section of each product page. We designed each Fiori Tracker Business product to work independently. Once you install the product and any dependent products are needed, it will guide the user to install those. Note Release 2020 FPS01 is not downward compatible with previous releases. It should not be installed on top of older releases. If you have used previous releases and would like to move to release 2020 FPS01 then you need to move your data manually. If you need help with moving you data please contact our project manager for an offer (gm@nypesap.com) Compatibility The list should be read as (for example): Catalog Import release SPS02 requires \"As-is\" in release SPS02 . Main product Main prod. release Uses product Compatible release Catalog Import SPS02 As-is SPS02 Core SPS03, SPS02, FPS01","title":"Installation"},{"location":"inst/#installation-general-considerations","text":"To install Fiori Tracker Business products please follow the installations guides that are in the Installation section of each product page. We designed each Fiori Tracker Business product to work independently. Once you install the product and any dependent products are needed, it will guide the user to install those. Note Release 2020 FPS01 is not downward compatible with previous releases. It should not be installed on top of older releases. If you have used previous releases and would like to move to release 2020 FPS01 then you need to move your data manually. If you need help with moving you data please contact our project manager for an offer (gm@nypesap.com)","title":"Installation - general considerations"},{"location":"inst/#compatibility","text":"The list should be read as (for example): Catalog Import release SPS02 requires \"As-is\" in release SPS02 . Main product Main prod. release Uses product Compatible release Catalog Import SPS02 As-is SPS02 Core SPS03, SPS02, FPS01","title":"Compatibility"},{"location":"ci/FPS01/eval-dep/","text":"Catalog Import - Evaluation deployment The simplest deployment option to evaluate Catalog Import is the installation of all required products in one system (f.e. in Sandbox system). The products that you need to install are: Catalog Import \"As-is\" Main API \"As-is\" Connector","title":"Catalog Import - Evaluation deployment"},{"location":"ci/FPS01/eval-dep/#catalog-import-evaluation-deployment","text":"The simplest deployment option to evaluate Catalog Import is the installation of all required products in one system (f.e. in Sandbox system). The products that you need to install are: Catalog Import \"As-is\" Main API \"As-is\" Connector","title":"Catalog Import - Evaluation deployment"},{"location":"ci/FPS01/inst/","text":"Macro Rendering Error TemplateSyntaxError : expected token 'end of print statement', got 'FPS01' Traceback (most recent call last): File \"c:\\users\\gm\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\mkdocs_macros\\plugin.py\", line 339, in render md_template = self.env.from_string(markdown) File \"c:\\users\\gm\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\jinja2\\environment.py\", line 941, in from_string return cls.from_code(self, self.compile(source), globals, None) File \"c:\\users\\gm\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\jinja2\\environment.py\", line 638, in compile self.handle_exception(source=source_hint) File \"c:\\users\\gm\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\jinja2\\environment.py\", line 832, in handle_exception reraise(*rewrite_traceback_stack(source=source)) File \"c:\\users\\gm\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\jinja2\\_compat.py\", line 28, in reraise raise value.with_traceback(tb) File \"<unknown>\", line 12, in template jinja2.exceptions.TemplateSyntaxError: expected token 'end of print statement', got 'FPS01'","title":"Catalog Import - Installation"},{"location":"ci/FPS01/inst/#macro-rendering-error","text":"TemplateSyntaxError : expected token 'end of print statement', got 'FPS01' Traceback (most recent call last): File \"c:\\users\\gm\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\mkdocs_macros\\plugin.py\", line 339, in render md_template = self.env.from_string(markdown) File \"c:\\users\\gm\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\jinja2\\environment.py\", line 941, in from_string return cls.from_code(self, self.compile(source), globals, None) File \"c:\\users\\gm\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\jinja2\\environment.py\", line 638, in compile self.handle_exception(source=source_hint) File \"c:\\users\\gm\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\jinja2\\environment.py\", line 832, in handle_exception reraise(*rewrite_traceback_stack(source=source)) File \"c:\\users\\gm\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\jinja2\\_compat.py\", line 28, in reraise raise value.with_traceback(tb) File \"<unknown>\", line 12, in template jinja2.exceptions.TemplateSyntaxError: expected token 'end of print statement', got 'FPS01'","title":"Macro Rendering Error"},{"location":"ci/FPS01/main/","text":"Macro Rendering Error TemplateSyntaxError : expected token 'end of print statement', got 'FPS01' Traceback (most recent call last): File \"c:\\users\\gm\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\mkdocs_macros\\plugin.py\", line 339, in render md_template = self.env.from_string(markdown) File \"c:\\users\\gm\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\jinja2\\environment.py\", line 941, in from_string return cls.from_code(self, self.compile(source), globals, None) File \"c:\\users\\gm\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\jinja2\\environment.py\", line 638, in compile self.handle_exception(source=source_hint) File \"c:\\users\\gm\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\jinja2\\environment.py\", line 832, in handle_exception reraise(*rewrite_traceback_stack(source=source)) File \"c:\\users\\gm\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\jinja2\\_compat.py\", line 28, in reraise raise value.with_traceback(tb) File \"<unknown>\", line 10, in template jinja2.exceptions.TemplateSyntaxError: expected token 'end of print statement', got 'FPS01'","title":"Catalog Import"},{"location":"ci/FPS01/main/#macro-rendering-error","text":"TemplateSyntaxError : expected token 'end of print statement', got 'FPS01' Traceback (most recent call last): File \"c:\\users\\gm\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\mkdocs_macros\\plugin.py\", line 339, in render md_template = self.env.from_string(markdown) File \"c:\\users\\gm\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\jinja2\\environment.py\", line 941, in from_string return cls.from_code(self, self.compile(source), globals, None) File \"c:\\users\\gm\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\jinja2\\environment.py\", line 638, in compile self.handle_exception(source=source_hint) File \"c:\\users\\gm\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\jinja2\\environment.py\", line 832, in handle_exception reraise(*rewrite_traceback_stack(source=source)) File \"c:\\users\\gm\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\jinja2\\_compat.py\", line 28, in reraise raise value.with_traceback(tb) File \"<unknown>\", line 10, in template jinja2.exceptions.TemplateSyntaxError: expected token 'end of print statement', got 'FPS01'","title":"Macro Rendering Error"},{"location":"ci/FPS01/tech/","text":"Catalog Import - Technical Details Central System Components Transport Package: ZNYPE CI CEN oData Service Name: ZNYPECICEN_SRV App: \"FT Catalog Import\" Launch Path: https:// host:port /sap/bc/ui5_ui5/sap/zftcatimport Fiori Launchpad Designer Settings * Catalog: ZCNYPE CI * Group: ZGNYPE CI Tile: \"Catalog Import\" * Semantic Object: ZNYPECI * Action: display * ID: nype.ft.catimport * Icon: sap-icon://Fiori2/F0283 PFCG Role: ZNYPE_ CI Managed System Components Transport Package: ZNYPE CI MAN","title":"Catalog Import - Technical Details"},{"location":"ci/FPS01/tech/#catalog-import-technical-details","text":"","title":"Catalog Import - Technical Details"},{"location":"ci/FPS01/tech/#central-system-components","text":"Transport Package: ZNYPE CI CEN oData Service Name: ZNYPECICEN_SRV","title":"Central System Components"},{"location":"ci/FPS01/tech/#app-ft-catalog-import","text":"Launch Path: https:// host:port /sap/bc/ui5_ui5/sap/zftcatimport Fiori Launchpad Designer Settings * Catalog: ZCNYPE CI * Group: ZGNYPE CI Tile: \"Catalog Import\" * Semantic Object: ZNYPECI * Action: display * ID: nype.ft.catimport * Icon: sap-icon://Fiori2/F0283 PFCG Role: ZNYPE_ CI","title":"App: \"FT Catalog Import\""},{"location":"ci/FPS01/tech/#managed-system-components","text":"Transport Package: ZNYPE CI MAN","title":"Managed System Components"},{"location":"ci/SPS02/eval-dep/","text":"Catalog Import - Evaluation deployment The simplest deployment option to evaluate Catalog Import is the installation of all required products in one system (f.e. in Sandbox system). The products that you need to install are: Catalog Import \"As-is\" Main API \"As-is\" Connector","title":"Catalog Import - Evaluation deployment"},{"location":"ci/SPS02/eval-dep/#catalog-import-evaluation-deployment","text":"The simplest deployment option to evaluate Catalog Import is the installation of all required products in one system (f.e. in Sandbox system). The products that you need to install are: Catalog Import \"As-is\" Main API \"As-is\" Connector","title":"Catalog Import - Evaluation deployment"},{"location":"ci/SPS02/inst/","text":"Catalog Import - Installation General Basis expert steps Obtain the transport files from Nype's representative - files for Release 2020FPS02 Activate Frontend ICF nodes for node zftcatimport Enable backend odata service for service ZNYPECICEN_SRV Assign pfcg roles for role ZNYPE_CI As-is plugin, Basis expert steps Install As-is on Central system Install As-is on each Managed system If you are installing Catalog Import for the first time please check Evaluation deployment for details on installing Catalog Import to one system (f.e. Sandbox).","title":"Catalog Import - Installation"},{"location":"ci/SPS02/inst/#catalog-import-installation","text":"General Basis expert steps Obtain the transport files from Nype's representative - files for Release 2020FPS02 Activate Frontend ICF nodes for node zftcatimport Enable backend odata service for service ZNYPECICEN_SRV Assign pfcg roles for role ZNYPE_CI As-is plugin, Basis expert steps Install As-is on Central system Install As-is on each Managed system If you are installing Catalog Import for the first time please check Evaluation deployment for details on installing Catalog Import to one system (f.e. Sandbox).","title":"Catalog Import - Installation"},{"location":"ci/SPS02/main/","text":"Catalog Import The tool lets you list the catalogs from all your systems and import them to Fiori Tracker Core for documentation purposes (stored as so-called \"To-be\" records). Catalog Import uses free \"As-is\" API . Installation Dependencies Requires: As-is API (free) Location Located on Central system Available extensions None. Other applications that might use the product Fiori Tracker Core Technical information","title":"Catalog Import"},{"location":"ci/SPS02/main/#catalog-import","text":"The tool lets you list the catalogs from all your systems and import them to Fiori Tracker Core for documentation purposes (stored as so-called \"To-be\" records). Catalog Import uses free \"As-is\" API .","title":"Catalog Import"},{"location":"ci/SPS02/main/#installation","text":"","title":"Installation"},{"location":"ci/SPS02/main/#dependencies","text":"Requires: As-is API (free)","title":"Dependencies"},{"location":"ci/SPS02/main/#location","text":"Located on Central system","title":"Location"},{"location":"ci/SPS02/main/#available-extensions","text":"None.","title":"Available extensions"},{"location":"ci/SPS02/main/#other-applications-that-might-use-the-product","text":"Fiori Tracker Core","title":"Other applications that might use the product"},{"location":"ci/SPS02/main/#technical-information","text":"","title":"Technical information"},{"location":"ci/SPS02/tech/","text":"Catalog Import - Technical Details Central System Components Transport Package: ZNYPE CI CEN oData Service Name: ZNYPECICEN_SRV App: \"FT Catalog Import\" Launch Path: https:// host:port /sap/bc/ui5_ui5/sap/zftcatimport Fiori Launchpad Designer Settings * Catalog: ZCNYPE CI * Group: ZGNYPE CI Tile: \"Catalog Import\" * Semantic Object: ZNYPECI * Action: display * ID: nype.ft.catimport * Icon: sap-icon://Fiori2/F0283 PFCG Role: ZNYPE_ CI Managed System Components Transport Package: ZNYPE CI MAN","title":"Catalog Import - Technical Details"},{"location":"ci/SPS02/tech/#catalog-import-technical-details","text":"","title":"Catalog Import - Technical Details"},{"location":"ci/SPS02/tech/#central-system-components","text":"Transport Package: ZNYPE CI CEN oData Service Name: ZNYPECICEN_SRV","title":"Central System Components"},{"location":"ci/SPS02/tech/#app-ft-catalog-import","text":"Launch Path: https:// host:port /sap/bc/ui5_ui5/sap/zftcatimport Fiori Launchpad Designer Settings * Catalog: ZCNYPE CI * Group: ZGNYPE CI Tile: \"Catalog Import\" * Semantic Object: ZNYPECI * Action: display * ID: nype.ft.catimport * Icon: sap-icon://Fiori2/F0283 PFCG Role: ZNYPE_ CI","title":"App: \"FT Catalog Import\""},{"location":"ci/SPS02/tech/#managed-system-components","text":"Transport Package: ZNYPE CI MAN","title":"Managed System Components"},{"location":"inst/admin/","text":"Step 1 - Configure managed systems Using SAP Gui Admin transaction start step 1. Modify Managed systems : For each managed system defined by column System ID provide respective RFC destination (see how to prepare it . Leave the rest of the fields - they are updated automatically on Connection status check . Check connection status Using same SAP Gui Admin transaction start step 2. Connection status check Modify Managed systems : For correctly configured systems it should show green light in column status as shown on below screenshot:","title":"Step 1 - Configure managed systems"},{"location":"inst/admin/#step-1-configure-managed-systems","text":"Using SAP Gui Admin transaction start step 1. Modify Managed systems : For each managed system defined by column System ID provide respective RFC destination (see how to prepare it . Leave the rest of the fields - they are updated automatically on Connection status check . Check connection status Using same SAP Gui Admin transaction start step 2. Connection status check Modify Managed systems : For correctly configured systems it should show green light in column status as shown on below screenshot:","title":"Step 1 - Configure managed systems"},{"location":"inst/ci-eval-dep/","text":"Catalog Import - Evaluation deployment The simplest deployment option that can be used to evaluate Catalog Import is the installation of all required products in one system (f.e. in Sandbox system). The products that you need to install are: Catalog Import \"As-is\" Main API \"As-is\" Connector","title":"Catalog Import - Evaluation deployment"},{"location":"inst/ci-eval-dep/#catalog-import-evaluation-deployment","text":"The simplest deployment option that can be used to evaluate Catalog Import is the installation of all required products in one system (f.e. in Sandbox system). The products that you need to install are: Catalog Import \"As-is\" Main API \"As-is\" Connector","title":"Catalog Import - Evaluation deployment"},{"location":"inst/ci/","text":"Catalog Import - Installation General Basis expert steps 1. Obtain the transport files from Nype representative - files for Release 2020FPS01 2. Activate Frontend ICF nodes for node zftcatimport 3. Enable backend odata service for service ZNYPECICEN_SRV 4. Assign pfcg roles for role ZNYPE_CI As-is plugin, Basis expert steps 1. Install As-is on Central system 2. Install As-is on each Managed system If you are installing Catalog Import for the first time please check Evaluation deployment for details on installing Catalog Import to one system (f.e. Sandbox).","title":"Catalog Import - Installation"},{"location":"inst/ci/#catalog-import-installation","text":"General Basis expert steps 1. Obtain the transport files from Nype representative - files for Release 2020FPS01 2. Activate Frontend ICF nodes for node zftcatimport 3. Enable backend odata service for service ZNYPECICEN_SRV 4. Assign pfcg roles for role ZNYPE_CI As-is plugin, Basis expert steps 1. Install As-is on Central system 2. Install As-is on each Managed system If you are installing Catalog Import for the first time please check Evaluation deployment for details on installing Catalog Import to one system (f.e. Sandbox).","title":"Catalog Import - Installation"},{"location":"inst/log/","text":"Logs In case of errors Fiori Tracker saves application log entries. To access the log go to SAP Gui transaction SLG1 an list messages with external ID ZNYPE .","title":"Logs"},{"location":"inst/log/#logs","text":"In case of errors Fiori Tracker saves application log entries. To access the log go to SAP Gui transaction SLG1 an list messages with external ID ZNYPE .","title":"Logs"},{"location":"inst/rfc/","text":"How to prepare the RFC destinations for Managed systems You will need RFC destinations for each system that you plan to manage with Fiori Tracker Business apps. Please set RFC destinations In your Central system using transaction sm59 . Each RFC destination should point to one of your managed systems. The user set in RFC destination needs to have type SYSTEM and the following authorizations: Authorization: S_RFC ACTVT: 16 RFC_TYPE: FUGR RFC_NAME: Z_FTASIS","title":"How to prepare the RFC destinations for Managed systems"},{"location":"inst/rfc/#how-to-prepare-the-rfc-destinations-for-managed-systems","text":"You will need RFC destinations for each system that you plan to manage with Fiori Tracker Business apps. Please set RFC destinations In your Central system using transaction sm59 . Each RFC destination should point to one of your managed systems. The user set in RFC destination needs to have type SYSTEM and the following authorizations: Authorization: S_RFC ACTVT: 16 RFC_TYPE: FUGR RFC_NAME: Z_FTASIS","title":"How to prepare the RFC destinations for Managed systems"},{"location":"inst/step-1/","text":"Step 1 - Download and import the transport files 1. Download the transport files Contact Nype's representative to obtain the zip file for Release Note You should perform the two following steps in Central system or Managed system . The choice is dependent on which part of the Fiori Tracker family you are installing. Please refer to the Location section on the product's main page to choose the correct system role. 2. Unzip and place files in your transport folder Unizp the cofile and data files, and place them in the respective folder on your application server. 3 Perform the import Using transaction STMS import the transport to your system.","title":"Step 1 - Download and import the transport files"},{"location":"inst/step-1/#step-1-download-and-import-the-transport-files","text":"","title":"Step 1 - Download and import the transport files"},{"location":"inst/step-1/#1-download-the-transport-files","text":"Contact Nype's representative to obtain the zip file for Release Note You should perform the two following steps in Central system or Managed system . The choice is dependent on which part of the Fiori Tracker family you are installing. Please refer to the Location section on the product's main page to choose the correct system role.","title":"1. Download the transport files"},{"location":"inst/step-1/#2-unzip-and-place-files-in-your-transport-folder","text":"Unizp the cofile and data files, and place them in the respective folder on your application server.","title":"2. Unzip and place files in your transport folder"},{"location":"inst/step-1/#3-perform-the-import","text":"Using transaction STMS import the transport to your system.","title":"3 Perform the import"},{"location":"inst/step-2/","text":"Step 2 - Activate the Frontend ICF nodes Note To activate the needed Frontend ICF nodes complete the sub-steps described below for each node. Run SAP Gui SICF transaction, choose Execute and in the tree of services for path Path: /default_host/sap/bc/ui5_ui5/sap/ , use right click on service and choose Activate for each ICF node you and to activate","title":"Step 2 - Activate the Frontend ICF nodes"},{"location":"inst/step-2/#step-2-activate-the-frontend-icf-nodes","text":"Note To activate the needed Frontend ICF nodes complete the sub-steps described below for each node. Run SAP Gui SICF transaction, choose Execute and in the tree of services for path Path: /default_host/sap/bc/ui5_ui5/sap/ , use right click on service and choose Activate for each ICF node you and to activate","title":"Step 2 - Activate the Frontend ICF nodes"},{"location":"inst/step-3/","text":"Step 3 - Enable oData service To enable oData service complete the sub-steps described below. Note When description refers to Service name , you need to put the service\u2019s name of the run application. If you don't know the Service name please refer to the technical section of each product. 1. Generate Runtime objects in transaction SEGW 1.1. Start SAP Gui transaction SEGW 1.2. Using the menu Project > Open - Open project named as the first part of the Service name . Fe. if Service name is ZFIORITRACKER_SVR please open project called ZFIORITRACKER. 1.3. Go to Change mode and choose function Generate (you will be prompted for transport and your user must be registered as developer) 2. Add the Service to Service Catalog 2.1 Start SAP Gui transaction /n/IWFND/MAINT_SERVICE 2.2 Find entry with Service name If the entry is present then move to sub-step 3 (Add system alias to ICF node), in not, please execute the following steps: 2.3 Click on the Add service button. 2.4 Provide System Alias: LOCAL and External Service Name as the Service name . 2.5 Select the record with Service name and click on the Add selected services button. 3. Add system alias to ICF node 3.1 In /n/IWFND/MAINT_SERVICE, chose Service name 3.2 If ICF node is green and alias is present then the procedure is completed, if not, please execute the following steps: 3.3 Choose Add system alias , New entry and type Service name _0001 (f.e. ZFIORITRACKER_SRV_0001) in Service Doc. Identifier and \"LOCAL\" in SAP System Alias mark Default System check-mark. 3.4 Click on ICF node button and from drop down chose Activate","title":"Step 3 - Enable oData service"},{"location":"inst/step-3/#step-3-enable-odata-service","text":"To enable oData service complete the sub-steps described below. Note When description refers to Service name , you need to put the service\u2019s name of the run application. If you don't know the Service name please refer to the technical section of each product.","title":"Step 3 - Enable oData service"},{"location":"inst/step-3/#1-generate-runtime-objects-in-transaction-segw","text":"1.1. Start SAP Gui transaction SEGW 1.2. Using the menu Project > Open - Open project named as the first part of the Service name . Fe. if Service name is ZFIORITRACKER_SVR please open project called ZFIORITRACKER. 1.3. Go to Change mode and choose function Generate (you will be prompted for transport and your user must be registered as developer)","title":"1. Generate Runtime objects in transaction SEGW"},{"location":"inst/step-3/#2-add-the-service-to-service-catalog","text":"2.1 Start SAP Gui transaction /n/IWFND/MAINT_SERVICE 2.2 Find entry with Service name If the entry is present then move to sub-step 3 (Add system alias to ICF node), in not, please execute the following steps: 2.3 Click on the Add service button. 2.4 Provide System Alias: LOCAL and External Service Name as the Service name . 2.5 Select the record with Service name and click on the Add selected services button.","title":"2. Add the Service to Service Catalog"},{"location":"inst/step-3/#3-add-system-alias-to-icf-node","text":"3.1 In /n/IWFND/MAINT_SERVICE, chose Service name 3.2 If ICF node is green and alias is present then the procedure is completed, if not, please execute the following steps: 3.3 Choose Add system alias , New entry and type Service name _0001 (f.e. ZFIORITRACKER_SRV_0001) in Service Doc. Identifier and \"LOCAL\" in SAP System Alias mark Default System check-mark. 3.4 Click on ICF node button and from drop down chose Activate","title":"3. Add system alias to ICF node"},{"location":"inst/step-4/","text":"Step 4 - Assign Authorization role 1. Assign role Go to transaction PFCG and assign Role to all users who should access the installed product.","title":"Step 4 - Assign Authorization role"},{"location":"inst/step-4/#step-4-assign-authorization-role","text":"","title":"Step 4 - Assign Authorization role"},{"location":"inst/step-4/#1-assign-role","text":"Go to transaction PFCG and assign Role to all users who should access the installed product.","title":"1. Assign role"},{"location":"inst/ui5lib-options/","text":"List of options for running Fiori Tracker apps on a specific UI5 library Fiori Tracker Suite applications require access to the SAP UI5 library. They were built and tested for SAP UI5 1.52, so they work best with this specific version. They should also work with higher versions, but we have not performed the tests for them yet. On systems with Fiori Launchpad configured the default available library will be used. If default SAP UI5 library is not be found in your system Fiori Tracker Suite applications will automatically start using the library provided by SAP on Content Delivery Network (CDN). If the CDN is not accessible and you are not able to set UI5 library locally you can install \"uideps\" which will provide the library from your local system in a form of BSP. This is also the way to provide a specific version of the library for Fiori Tracker apps in case your default UI5 library version would cause issues.","title":"List of options for running Fiori Tracker apps on a specific UI5 library"},{"location":"inst/ui5lib-options/#list-of-options-for-running-fiori-tracker-apps-on-a-specific-ui5-library","text":"Fiori Tracker Suite applications require access to the SAP UI5 library. They were built and tested for SAP UI5 1.52, so they work best with this specific version. They should also work with higher versions, but we have not performed the tests for them yet. On systems with Fiori Launchpad configured the default available library will be used. If default SAP UI5 library is not be found in your system Fiori Tracker Suite applications will automatically start using the library provided by SAP on Content Delivery Network (CDN). If the CDN is not accessible and you are not able to set UI5 library locally you can install \"uideps\" which will provide the library from your local system in a form of BSP. This is also the way to provide a specific version of the library for Fiori Tracker apps in case your default UI5 library version would cause issues.","title":"List of options for running Fiori Tracker apps on a specific UI5 library"}]}